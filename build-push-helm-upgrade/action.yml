name: 'Deploy to Kubernetes'
description: 'Build, push to ECR and deploy to Kubernetes'
inputs:
  aws-access-key-id:
    description: 'AWS access key id'
    required: true
  aws-secret-access-key:
    description: 'AWS secret access key'
    required: true
  aws-region:
    description: 'AWS region'
    required: true
  ecr-repository:
    description: 'ECR repository name'
    required: true
  image-tag:
    description: 'Tag for the Docker image'
    default: 'latest'
  release-name:
    description: 'Helm release name'
    required: true
  dockerfile-path:
    description: 'Path to the Dockerfile'
    default: '.'
    required: true
  chart-name:
    description: 'Name of the Helm chart'
    required: true
  namespace:
    description: 'Kubernetes namespace'
    required: true
  values:
    description: 'Values file for the Helm chart'
    required: true
  eks-cluster-name:
    description: 'Name of the EKS cluster'
    required: true

runs:
  using: "composite"
  steps:
    - name: Get AWS account ID
      id: aws-account-id
      run: echo "::set-output name=account_id::$(aws sts get-caller-identity --query 'Account' --output text)"
      shell: bash
      env:
        AWS_ACCESS_KEY_ID: ${{ inputs.aws-access-key-id }}
        AWS_SECRET_ACCESS_KEY: ${{ inputs.aws-secret-access-key }}
        AWS_REGION: ${{ inputs.aws-region }}

    - name: Login to ECR
      run: |
        aws ecr get-login-password --region ${{ inputs.aws-region }} | docker login --username AWS --password-stdin ${{ steps.aws-account-id.outputs.account_id }}.dkr.ecr.${{ inputs.aws-region }}.amazonaws.com
      shell: bash
      env:
        AWS_ACCESS_KEY_ID: ${{ inputs.aws-access-key-id }}
        AWS_SECRET_ACCESS_KEY: ${{ inputs.aws-secret-access-key }}

    - name: Build and push Docker image
      run: |
        docker build -t ${{ inputs.ecr-repository }}:${{ inputs.image-tag }} ${{ inputs.dockerfile-path }}
        docker push ${{ inputs.ecr-repository }}:${{ inputs.image-tag }}
      shell: bash

    - name: Configure kubectl
      run: |
        aws eks update-kubeconfig --name ${{ inputs.eks-cluster-name }} --region ${{ inputs.aws-region }}
      shell: bash
      env:
        AWS_ACCESS_KEY_ID: ${{ inputs.aws-access-key-id }}
        AWS_SECRET_ACCESS_KEY: ${{ inputs.aws-secret-access-key }}

    - name: Add Helm repo
      run: |
        helm repo add ms-helm-charts s3://ms-helm-charts-bucket/stable/
        helm repo update
      shell: bash

    - name: Upgrade Helm chart  
      run: |
        helm upgrade ${{ inputs.release-name }} ms-helm-charts/${{ inputs.chart-name }} --namespace ${{ inputs.namespace }} --values ${{ inputs.values }} --create-namespace --install --set image.repository=${{ inputs.ecr-repository }},image.tag=${{ inputs.image-tag }}
      shell: bash
