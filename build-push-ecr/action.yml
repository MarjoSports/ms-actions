name: 'Deploy to Kubernetes'
description: 'Build, push to ECR and deploy to Kubernetes'
inputs:
  aws-access-key-id:
    description: 'AWS access key id'
    required: true
  aws-secret-access-key:
    description: 'AWS secret access key'
    required: true
  aws-region:
    description: 'AWS region'
    required: true
  ecr-repository:
    description: 'ECR repository name'
    required: true
  image-tag:
    description: 'Tag for the Docker image'
    default: 'latest'
  release-name:
    description: 'Helm release name'
    required: true
  dockerfile-path:
    description: 'Path to the Dockerfile'
    default: '.'
    required: true
  build-args:
    description: 'Build arguments for Docker build'
    required: false
  create-repo:
    description: 'Create ECR repository if it does not exist'
    required: false
    default: 'false'
    
runs:
  using: "composite"
  steps:
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: ${{ inputs.aws-region }}

    - name: Get AWS account ID
      id: aws-account-id
      run: echo "::set-output name=account_id::$(aws sts get-caller-identity --query 'Account' --output text)"
      shell: bash

    - name: Create ECR repository
      if: ${{ inputs.create-repo == 'true' }}
      run: |
        aws ecr describe-repositories --repository-names ${{ inputs.ecr-repository }} || \
        aws ecr create-repository --repository-name ${{ inputs.ecr-repository }}
      shell: bash

    - name: Login to ECR
      run: |
        aws ecr get-login-password --region ${{ inputs.aws-region }} | docker login --username AWS --password-stdin ${{ steps.aws-account-id.outputs.account_id }}.dkr.ecr.${{ inputs.aws-region }}.amazonaws.com
      shell: bash

    - name: Build and push Docker image
      run: |
        if [ "${{ inputs.dockerfile-path }}" == "." ]; then
          docker build --build-arg ${{ inputs.build-args }} -t ${{ steps.aws-account-id.outputs.account_id }}.dkr.ecr.${{ inputs.aws-region }}.amazonaws.com/${{ inputs.ecr-repository}}:${{ inputs.image-tag }} ${{ inputs.dockerfile-path }}
        else
          docker build --build-arg ${{ inputs.build-args }} -t ${{ steps.aws-account-id.outputs.account_id }}.dkr.ecr.${{ inputs.aws-region }}.amazonaws.com/${{ inputs.ecr-repository}}:${{ inputs.image-tag }} -f ${{ inputs.dockerfile-path }} .
        fi
        docker push ${{ steps.aws-account-id.outputs.account_id }}.dkr.ecr.${{ inputs.aws-region }}.amazonaws.com/${{ inputs.ecr-repository}}:${{ inputs.image-tag }}
      shell: bash

      